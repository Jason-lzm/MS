<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qi.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.qi.model.Task" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="startTime" property="starttime" jdbcType="VARCHAR" />
    <result column="endTime" property="endtime" jdbcType="VARCHAR" />
    <result column="goods" property="goods" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ResultMapWithBLOBs" type="com.qi.model.Task" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, userId, startTime, endTime, goods, amount, unit, state, memo
  </sql>
  
  <sql id="Blob_Column_List" >
    content
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByTask" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    <where>
    	<if test="userId !=null">userId=#{userId}</if>
    	<if test="startTime !=null">and startTime=#{startTime}</if>
    	<if test="endTime !=null">and endTime=#{endTime}</if>
    	<if test="goods !=null">and goods=#{goods}</if>
    	<if test="amount !=null">and amount=#{amount}</if>
    	<if test="unit !=null">and unit=#{unit}</if>
    	<if test="state !=null">and state=#{state}</if>
    	<if test="memo !=null">and memo=#{memo}</if>
    	<if test="content !=null">and content=#{content}</if>
    </where>
  </select>
  
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    <where>
    	<if test="userId !=null">userId=#{userId }</if>
    </where>
    limit #{offset},#{pagesize}
  </select>
  
  <select id="selectTableCount" resultType="integer" parameterType="map">
    select count(*) from task
    <where>
    	<if test="userId !=null">userId=#{userId }</if>
    </where>
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  
  <insert id="insert" parameterType="com.qi.model.Task" >
    insert into task (id, userId, startTime, 
      endTime, goods, amount, 
      unit, state, memo, content
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{starttime,jdbcType=VARCHAR}, 
      #{endtime,jdbcType=VARCHAR}, #{goods,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{unit,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{memo,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qi.model.Task" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="goods != null" >
        goods,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="goods != null" >
        #{goods,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qi.model.Task" >
    update task
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="goods != null" >
        goods = #{goods,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qi.model.Task" >
    update task
    set userId = #{userid,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      goods = #{goods,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      memo = #{memo,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qi.model.Task" >
    update task
    set userId = #{userid,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      goods = #{goods,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>